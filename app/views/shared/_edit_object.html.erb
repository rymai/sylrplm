<%puts "edit_object plm_object=#{plm_object.inspect}"%>
<%= form_for(plm_object ,  :html => {:action=>:create,  :id => h_form_html_id(plm_object, fonct),:multipart => true, }) do |f| %>
<%= form_errors_for plm_object %>
<h1><%= t("#{plm_object.modelname}_#{fonct}") %></h1>
<% locals={ :f => f,  :object => plm_object, :fonct=>fonct}%>
<% if plm_object.is_a?(Datafile) %>
<%= hidden_field_tag "MAX_FILE_SIZE", PlmServices.get_property(:MAX_FILE_SIZE)  %>
<% locals[:document] = plm_object.document unless plm_object.document.nil? %>
<% end %>
<% if defined? object_orig
	object_orig_ok = !object_orig.nil?
else
	object_orig_ok = false
end %>
<%= hidden_field_tag "object_orig_id", object_orig.id if object_orig_ok %>
<%= hidden_field_tag "fonct[current]", fonct  %>
<%= hidden_field plm_object.modelname , :revision if  plm_object.respond_to? :revision %>
<% fonct_menu="new" if fonct.include? "new"%>
<% fonct_menu="edit" if fonct.include? "edit"%>
<%= render(:partial => "shared/menu_#{fonct_menu}",:locals => locals) %>
<%= render(:partial => "#{plm_object.controller_name}/edit",:locals => locals) %>
<% if object_orig_ok %>
<%= render(:partial => "shared/show_objects_in_relations",:locals => { :object => object_orig, :f => f, :fonct=>fonct }) %>
<% end %>
<%= render(:partial => "shared/submit_#{fonct_menu}",:locals => locals) %>
<% end %>
